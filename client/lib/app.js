// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  jQuery(function() {
    var router;
    window.Event = (function(_super) {

      __extends(Event, _super);

      function Event() {
        return Event.__super__.constructor.apply(this, arguments);
      }

      Event.prototype.initialize = function() {
        this.url = "/api/event/" + this.id;
        return console.log("Nouvel event !");
      };

      return Event;

    })(Backbone.Model);
    window.Session = (function(_super) {

      __extends(Session, _super);

      function Session() {
        return Session.__super__.constructor.apply(this, arguments);
      }

      Session.prototype.model = Event;

      Session.prototype.url = "/api/events";

      Session.prototype.initialize = function() {
        return console.log("Nouvelle session !");
      };

      return Session;

    })(Backbone.Collection);
    window.SessionView = (function(_super) {

      __extends(SessionView, _super);

      function SessionView() {
        return SessionView.__super__.constructor.apply(this, arguments);
      }

      SessionView.prototype.el = $('#session-cont');

      SessionView.prototype.initialize = function() {
        console.log("Vu instancier !");
        this.template = _.template($("#template-events").html());
        _.bindAll(this, 'render');
        this.collection.bind('change', this.render);
        this.collection.bind('add', this.render);
        this.collection.bind('remove', this.render);
        return this.collection.bind('reset', this.render);
      };

      SessionView.prototype.render = function() {
        var renderedCont;
        console.log("Vu rendu");
        renderedCont = this.template({
          events: this.collection.toJSON()
        });
        $(this.el).html(renderedCont);
        return this;
      };

      return SessionView;

    })(Backbone.View);
    window.SessionRouter = (function(_super) {

      __extends(SessionRouter, _super);

      function SessionRouter() {
        return SessionRouter.__super__.constructor.apply(this, arguments);
      }

      SessionRouter.prototype.initialize = function() {
        this.session = new Session();
        this.session.fetch();
        this.sessionView = new SessionView({
          collection: this.session
        });
        return this.sessionView.render();
      };

      return SessionRouter;

    })(Backbone.Router);
    return router = new SessionRouter();
  });

}).call(this);
